// Code generated by vfsgen; DO NOT EDIT.

// +build release

package cmd

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// CmdHelpEmbed statically implements the virtual filesystem provided to vfsgen.
var CmdHelpEmbed = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2020, 5, 3, 23, 48, 1, 463489657, time.UTC),
		},
		"/backup": &vfsgen۰DirInfo{
			name:    "backup",
			modTime: time.Date(2020, 4, 26, 23, 29, 55, 505186519, time.UTC),
		},
		"/backup/backup.go": &vfsgen۰CompressedFileInfo{
			name:             "backup.go",
			modTime:          time.Date(2020, 5, 2, 14, 29, 49, 961200952, time.UTC),
			uncompressedSize: 1497,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x6f\x8b\xe3\x36\x10\xc6\x5f\x5b\x9f\x62\x6a\x38\xce\x3e\x7c\xb6\xf7\x7a\xbb\x85\x40\x5e\xa4\x4e\x96\x2d\x1c\xdb\x25\x9b\x72\xd0\xe3\xe8\xc9\xd2\xc8\x56\x23\x4b\x46\x92\x1b\x96\xf6\xbe\x7b\x91\x95\xec\xa6\x29\x85\x52\xe8\x2b\xeb\xcf\x68\xe6\xf9\x3d\x33\x1e\x29\xdb\xd3\x0e\xa1\xa5\x6c\x3f\x8d\x84\xc8\x61\x34\xd6\x43\x46\x92\xd4\xb8\x94\x24\xa9\x97\x03\xa6\x84\x24\x69\x27\x7d\x3f\xb5\x25\x33\x43\x75\xe8\xd1\xa2\x74\xfb\xc9\xfa\xca\x8d\x6a\xd2\x7b\xa6\xcc\xc4\xf7\xda\xb4\x6d\x35\xee\xbb\x8a\x19\x2d\x64\x77\xf9\xcc\x8d\xe2\xea\xdb\x8a\x99\xd6\xd2\x94\xe4\x84\x54\x15\x34\x03\x87\xde\x28\xee\xc0\xf7\x08\xf1\xd9\x64\xa9\x97\x46\x13\xff\x34\xe2\x1c\xe0\xbc\x9d\x98\x87\xdf\x49\xd2\xcc\x01\xf0\x26\x06\x96\x71\x4b\x92\xf5\xee\x11\x00\x42\x9c\xd4\x1d\xf9\x3a\x67\xbe\xc7\xc3\xf7\x33\x13\x58\xf4\x93\xd5\x0e\x28\x68\x3c\x40\x3c\x6c\x06\x4e\xc4\xa4\xd9\x4b\x58\xc6\xc4\x65\xe2\x1c\x32\x06\x6f\x9a\x81\xe7\xa1\x36\x83\x65\x48\x90\x85\x3d\x49\xd8\x31\x06\x96\xc0\x44\x17\xf6\x41\xc4\x12\x82\x5d\xe5\xbd\x39\x64\x79\x79\x6b\xec\x40\x7d\x96\xbe\xab\xeb\x9b\xfa\xaa\x7e\xb7\xbb\xba\xae\xdf\xd7\xd7\x69\x4e\x92\x28\x09\xd8\x51\xeb\x1d\xaa\xf1\x8e\x6a\xae\xd0\x02\x55\x0a\x8c\x98\xed\xd8\x6b\x73\x50\xc8\x3b\x04\xd3\xfe\x8a\xcc\x3b\xc8\x24\x96\x00\x9c\xba\xbe\x35\xd4\x72\x57\x80\xc5\xd0\x2f\x57\x80\x32\x26\xc0\x0a\xa9\xd0\x15\x50\x96\x79\xe4\x7b\x26\x38\xab\x91\xb1\x81\x07\xd4\xd6\xd2\xb2\x31\xc3\x40\x35\x2f\x80\xda\xce\xc1\xa7\xcf\xd1\xc3\x08\x7c\x44\x2c\x9b\x0f\x3f\x94\x8f\x9e\xa3\xb5\x21\xc9\x0e\x87\x51\x51\x8f\x59\xfa\x93\xa3\x1d\x46\xf7\xd2\x02\xb4\x54\xf9\x91\x67\xa5\xd4\xff\xc6\xb1\x52\xea\x5f\xeb\x5f\x9f\x0a\x84\x17\x31\x64\x6e\xdd\x76\x2e\x76\x71\xf8\x88\xd4\xb2\xfe\x4e\x3a\x6f\xec\xd3\xf9\xdd\xcc\xe4\xcd\xc4\xfa\x5b\xa9\x10\x0e\x52\x29\x98\x46\x4e\x3d\xce\x74\x71\x21\x07\x04\xe7\xe9\x30\x9e\xa0\x03\x00\x8c\xd4\x39\xe4\x17\x04\xcf\xa9\xb2\x10\xa3\xe9\x80\x05\x70\xef\xe0\x4c\xba\x2f\x00\x61\x71\x9c\xa6\x07\x6a\x1d\xc6\x31\x7a\x5b\x5f\xbd\x9d\x07\x69\x51\xbf\x5f\xd4\xd7\x3f\xd7\xdf\x2d\xea\x3a\x9d\x9f\xe7\x24\x91\x02\x10\xbe\x59\x86\x4e\x84\x24\x2f\x0d\xfc\x60\xba\xf2\x96\x7a\xaa\x44\xf6\x45\x84\xef\x02\x18\xd5\xda\x78\x18\x43\xee\x33\x84\xd7\xaf\xdc\xeb\x2f\xa7\x7c\x5f\x49\x82\xb0\x04\xe3\xca\xa6\x0f\xb7\xee\x4c\xb0\x2f\xc0\xff\xb7\x92\x0e\x3d\x28\xea\x3c\x0c\x86\x4b\x21\x91\x57\x94\x31\x86\x2e\x0a\x30\xe2\x6f\x1a\xe2\xcf\x12\xda\xf0\x57\x1f\x0f\x56\x7a\x6c\x8c\xf6\xa8\x7d\xc6\xe2\xf7\x68\x62\x01\x27\xa5\xe7\xae\x8a\x02\xd0\xda\xe0\xab\x71\xe5\x8f\x23\xea\x8b\x26\x84\xd3\x5f\x56\x0f\x0f\x9b\xfb\xf5\x1f\xf3\xba\xd9\x6e\x56\xbb\x4d\x5c\x6f\xd7\x1f\xb7\x05\xd4\x37\x37\x37\x47\x6c\x6b\xff\x11\x7c\x63\xad\xb1\x22\x4b\x31\x7c\xc1\x8c\xa8\xa5\xee\xe2\x44\x04\x38\x10\xc6\xce\xea\xa5\xee\x16\xf0\xea\xb7\xf4\x45\xee\xac\x30\x27\xc9\x09\x3a\xf0\x73\x14\x68\x41\x94\x8d\x32\x0e\xb3\x9c\x90\x44\x94\x1f\x03\x7b\xf6\xe9\x73\xfb\xe4\xf1\xc4\x9e\x87\xab\x67\xb3\xfe\x0c\x00\x00\xff\xff\x90\xe6\xfe\xcf\xd9\x05\x00\x00"),
		},
		"/backup/backup.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "backup.tmpl",
			modTime:          time.Date(2020, 4, 29, 2, 4, 55, 4717301, time.UTC),
			uncompressedSize: 329,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xd0\xcb\x4a\xc5\x30\x10\x06\xe0\xfd\x3c\xc5\x50\x5c\xb6\x0b\x2f\x2b\xc1\x45\xab\x5d\x08\xf6\x02\xb5\x20\x88\x8b\xa4\x19\xdb\xd2\x9a\x84\x24\x2e\x4a\xe8\xbb\x8b\x69\x51\xce\x05\xce\x76\xfe\x6f\x98\x9f\x01\xef\x51\xd0\xe7\x28\x09\xa3\xd6\xb2\x9e\x32\xd6\x4d\xdf\x3a\xc2\x75\x05\xf0\x3e\x41\x47\x5f\x7a\x66\x8e\x30\x4a\xb5\x0e\x22\x64\x8f\x55\x51\xa4\xe5\xd3\x3d\x20\x22\xf2\xb0\x03\xd0\xb4\xd9\xc1\x5c\x30\x3b\x70\xc5\x8c\x88\xd1\x90\x56\xc6\xc5\x38\x8c\xd6\x29\xb3\x00\x54\xf5\xeb\x73\x55\x36\x1b\x4c\x92\x89\x96\x87\x77\xeb\xcc\x28\xfb\x0f\x04\xc8\xdf\xd2\xa2\x7e\xc9\xf7\xf8\x0a\x6d\x37\x49\xc5\x39\xb2\x79\xde\xb1\xa5\xce\x90\xbb\xbe\xb9\xbd\x0b\xe4\xc8\xfd\x5d\x3e\xaf\xff\xe1\xd6\xeb\x92\xda\x5b\x9f\x32\xf0\x9e\xa4\xf8\xfd\xd5\x4f\x00\x00\x00\xff\xff\x53\x21\x38\x73\x49\x01\x00\x00"),
		},
		"/backup/dashboard.go": &vfsgen۰CompressedFileInfo{
			name:             "dashboard.go",
			modTime:          time.Date(2020, 5, 2, 14, 29, 49, 993201438, time.UTC),
			uncompressedSize: 2699,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xd1\x6e\xe3\xb6\x12\x7d\x96\xbe\x62\x56\x80\x61\x69\xa3\x4b\xef\xde\x16\x08\x60\x20\x0f\xa9\xd3\x00\x5b\xb8\xbb\x41\x8c\xa0\x0f\x4d\x51\x50\x14\x25\xb1\xa6\x48\x81\xa4\xa2\x0d\x8a\xbc\xf7\x1b\xfa\x79\xfd\x92\x62\x28\x59\x96\x13\x1b\x2e\xda\x17\x9b\xa2\xc8\x99\x73\xe6\x9c\xa1\xd8\x50\xb6\xa5\x25\x87\x8c\xb2\x6d\xdb\x84\xa1\xa8\x1b\x6d\x1c\xc4\x61\x10\x15\xb5\x8b\xc2\x20\xd2\x16\x7f\x1b\xea\xaa\x45\x21\x24\xc7\x41\x14\x86\x41\x54\x0a\x57\xb5\x19\x61\xba\x5e\x74\x15\x37\x5c\xd8\x6d\x6b\xdc\xc2\x36\xb2\x55\x5b\x26\x75\x9b\x6f\x95\xce\xb2\x45\xb3\x2d\x17\x96\x9b\x27\xc1\xf8\xeb\x7d\xb6\x29\x3e\x7e\xb3\x60\x3a\x33\x34\x0a\x93\x30\x5c\x2c\xe0\x86\xda\x2a\xd3\xd4\xe4\x90\x75\x42\xca\x01\x17\x50\x29\x41\x17\xe0\x2a\x0e\xf9\xb8\xc2\x69\xa0\x20\x35\xa3\x12\x10\x59\x58\xb4\x8a\x41\xcc\xe0\xfd\xaa\xce\x93\x7d\xa4\x98\xd5\x39\xbc\xf7\x59\xc8\x4a\xd7\x35\x55\x79\x0a\xd4\x94\x16\x7e\xfe\xc5\x3a\x23\x54\x99\xc0\xef\x61\xc0\xb4\x2a\x44\x09\xcb\x2b\x60\x64\xe5\xc7\x61\x20\x75\x3f\xe1\x1f\xc9\x5a\x97\x61\x60\x71\x62\xe0\x43\x3e\xf3\x6e\xd3\x0f\x63\xa9\xcb\x24\xdc\x45\x21\xab\xf5\x27\x72\x67\x74\xdd\xb8\x38\x7a\x54\x51\x72\xf4\xc5\xc6\x51\xe3\x84\x2a\x77\x24\x0b\x6d\xf6\xec\x2c\x21\xe4\x51\xf9\xbd\x61\x40\x5b\x57\xa5\xc0\x8d\xf1\xc9\x11\x88\x50\xf1\x10\xf1\xe1\x7e\x9d\xee\x10\x3e\x58\x6e\x14\xad\xf9\x38\x71\x47\xad\xed\xb4\xc9\xc7\x89\x95\xd6\x5b\xc1\xef\xb4\x71\xe9\x84\x56\x12\x06\xa2\xf0\xf1\xdf\x5d\x81\x12\x12\xeb\x81\xe4\xc9\x2d\x75\x54\x16\x71\x54\xe0\xff\x12\x36\x5e\x5c\x58\xa1\xba\x70\xdd\xba\x8a\x2b\x27\x18\x75\x42\xab\x25\xcc\x2e\x9e\x22\x0f\x32\x09\x83\x17\x5f\x3b\xf2\x49\x15\xba\x88\xa3\x4d\xcb\x18\xb7\xb6\x68\x25\x48\x84\x8e\xca\x09\x65\x1d\x55\x8c\x2f\x1f\x15\xc0\xcc\x46\x29\x20\x49\x64\x73\xb4\x58\x45\xed\xc8\xa6\x31\x42\xb9\x22\x8e\xfe\xfa\xe3\x4f\x78\x13\xb3\x13\xae\x82\xf9\xcc\xce\xdf\x44\x3f\x88\x3f\x56\x68\x4c\x07\x17\x10\x0d\x75\x66\x15\x55\x39\xd6\xb8\xa6\x5b\x1e\xe3\xd3\x28\xf5\x68\xa7\x24\x0c\x4a\x0d\xe8\xb5\x38\x19\xeb\x34\x10\xbd\xe7\xce\x08\xfe\x84\x9a\xee\x8d\xbc\x16\xd6\xab\x8c\xf2\x5e\xaf\xd7\x13\x89\x81\x10\x02\x68\x8e\x60\x2f\xad\xb0\x6e\xef\xdc\x5e\x77\x8f\x0a\x57\xbd\xd5\xe8\x98\x48\x4c\xb7\x32\x57\x73\x07\xa6\x47\x33\xb4\x0c\xd5\x98\x51\x0a\xeb\xec\xb2\x2f\x48\x2f\x15\x6a\xf5\x12\x9f\xf4\x2e\xd6\xfa\x96\x3b\x56\xf1\x7c\xd2\x7a\xf2\x2c\xa7\x30\x28\xb4\xcc\xb9\xa7\xb5\x3b\x37\xc8\x0f\x1a\x7d\x3b\xb4\x17\xf9\xd2\xba\xa6\x75\xb7\x7e\x59\x0a\xd1\x18\x03\x2b\x42\x33\x9b\xc2\xaf\x07\x9b\xaf\x33\x1b\xf7\x31\x93\x03\x77\xad\x0c\xa7\xd3\x36\xda\xa3\x1c\x10\xa0\xde\x39\x5a\x63\xc6\xe6\xe8\x03\x0c\xad\x2d\xb9\xa3\xae\xda\xf0\x86\x1a\xea\x34\x86\xd4\x96\xfc\xb8\xcd\x85\xb9\x96\x32\xf6\x6b\x3e\x5c\x5e\x5e\x22\x11\x43\xbb\x7f\xcf\x25\x85\xc8\xd0\x0e\x29\x19\xda\x9d\x60\x35\x26\xf8\x6f\xc4\x76\x09\xce\x70\xdb\x2d\xdb\xd1\x3b\xd3\x6c\xbd\x05\xbe\xe3\xa5\x50\x0a\xc1\x38\x0d\x9d\x11\x8e\x7b\x0a\x76\x07\xa5\x07\x01\xe4\x64\x7d\x31\xd3\x13\x35\xe0\xb4\xa3\x32\x7b\x76\xdc\xc2\x15\x7c\xe8\xe7\x98\x6e\x95\xeb\x1f\xfd\x19\x88\x05\x32\x54\x95\xbc\xb7\xbe\x77\xfa\x11\x73\x12\x6f\xb3\x00\x71\x60\x25\xbe\xd6\xf2\xad\x40\xc5\xa0\xc8\x01\xa5\x99\x25\x5f\x6b\x19\xa5\x90\x93\xcf\xb4\xe6\x09\x76\x01\x23\x9e\xd5\x4a\x2b\xc7\x95\x8b\x73\x32\x8c\x52\x98\xc4\xef\x17\x3a\xdd\xb2\xea\x56\x48\x1e\x4f\x5e\x61\xb0\x87\x26\xa7\x8e\xe7\x07\xa8\x7e\xb3\x5a\x9d\x86\xe5\xbd\xf1\x16\x1d\x6e\x3a\x03\xef\x9e\x76\xdf\x2b\x67\x9e\xf7\xf8\x70\xd3\x29\x80\xf8\xee\x35\xc2\x03\x25\x26\x0f\x17\x20\xb9\x9a\x64\x48\x16\x1f\x3f\xfc\xff\xdb\xe1\xa0\xbb\xe1\x59\x5b\x7a\x90\x29\xcc\xf2\x6d\x96\x82\x1f\xe1\x71\x72\x50\x8c\x63\x21\x10\xc0\x97\x4e\x21\xef\x09\x12\x94\xb6\x97\xbf\xff\xbf\x80\x8f\xf8\xfd\xd8\x77\xc2\xa1\x1d\x7f\x32\xda\x71\x98\xcf\xf2\xf9\xf4\xd0\x71\xfa\xd0\x88\x51\xda\x47\x3b\xed\xc6\x7f\x66\xfb\xe3\xd9\x76\xef\x44\x7f\x06\xfa\x3e\x78\x8d\xe0\x51\x9d\xc7\x70\xd0\xed\x37\x5a\x71\xb2\x4f\xb8\xcd\xe6\xbd\x28\x78\xef\x61\xbd\xec\x04\x96\xff\x4b\xa2\x74\x22\xd6\x79\x1e\x90\x6b\xc5\xdf\xe1\x46\xc0\xeb\xc4\xe4\xd3\xf9\xee\x30\x19\x65\x46\x5b\xfb\x8a\xeb\x78\x35\x41\x8e\x64\x17\x60\xa5\x55\x69\xa8\x6b\xa5\xff\xf2\x5b\x78\xd6\x2d\x28\xdd\x41\x45\x9f\xf8\x78\x25\xeb\x77\xfa\xcc\xfe\x1e\x33\x85\x3d\x54\xc6\x97\xc0\x70\xd7\x1a\x15\xbe\x84\x7f\x07\x00\x00\xff\xff\xbe\x78\x82\x54\x8b\x0a\x00\x00"),
		},
		"/backup/report.go": &vfsgen۰CompressedFileInfo{
			name:             "report.go",
			modTime:          time.Date(2020, 5, 3, 19, 5, 31, 454708844, time.UTC),
			uncompressedSize: 2678,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xc1\x6e\xe3\x36\x13\x3e\x4b\x4f\x31\x2b\xc0\xb0\xb4\xd1\x4f\xef\xfe\x2d\xb0\x80\x81\x1c\x52\x6f\x03\x6c\xe1\xee\x06\x31\x82\x1e\x9a\xa2\xa0\x29\x4a\x62\x4d\x91\x02\x49\x45\x1b\x2c\x72\xef\x33\xf4\xf1\xfa\x24\xc5\x90\x92\x23\x6d\x9c\xa6\x68\x2f\x36\x45\x72\x66\xbe\x6f\xbe\x19\x92\x2d\x65\x07\x5a\x71\xd8\x53\x76\xe8\xda\x38\x16\x4d\xab\x8d\x83\x34\x8e\x92\xb2\x71\x49\x1c\x25\xda\xe2\x6f\x4b\x5d\xbd\x2a\x85\xe4\x38\x48\xe2\x38\x4a\x2a\xe1\xea\x6e\x4f\x98\x6e\x56\xb6\x2d\xdf\x7e\xb3\x62\x7a\x6f\x68\x32\x5f\xe9\x6b\x6e\xb8\xb0\x87\xce\xb8\x95\x6d\x65\xa7\x0e\x4c\xea\xae\x38\x28\xbd\xdf\xaf\xda\x43\xb5\xb2\xdc\xdc\x09\xc6\x93\x38\x8b\xe3\xd5\x0a\xae\xb9\x0f\xdf\x0b\x29\x07\x48\x40\xa5\x04\x5d\x82\xab\x39\x18\xbf\x6a\xc1\x69\xa0\x20\x35\xa3\x12\x10\x52\x5c\x76\x8a\x41\xca\xe0\xf5\xa6\x29\xb2\xc1\x47\xca\x9a\x02\x5e\x7b\x4c\x64\xa3\x9b\x86\xaa\x22\x07\x6a\x2a\x0b\x3f\xff\x62\x9d\x11\xaa\xca\xe0\x4b\x1c\x31\xad\x4a\x51\xc1\xfa\x1c\x18\xd9\xf8\x71\x1c\x49\x1d\x26\xfc\x27\xd9\xea\x2a\x8e\x2c\x4e\x0c\x58\xc9\x47\xde\xef\xc2\x30\x95\xba\xca\xe2\xd1\x0b\xd9\x6c\x3f\x90\x2b\xa3\x9b\xd6\xa5\xc9\xad\x4a\xb2\x93\x0b\x3b\x47\x8d\x13\xaa\x1a\xf9\x95\xda\x0c\x90\x2d\x21\xe4\x56\x79\xc3\x38\xa2\x9d\xab\x73\xe0\xc6\xf8\xc8\x88\x42\xa8\x74\x70\x77\x73\xbd\xcd\x47\x78\x37\x96\x1b\x45\x1b\x7e\x9c\xb8\xa2\xd6\xf6\xda\x14\xc7\x89\x8d\xd6\x07\xc1\xaf\xb4\x71\xf9\x84\x53\x16\x47\xa2\xf4\xfe\x5f\x9d\x83\x12\x12\x93\x81\xcc\xc9\x25\x75\x54\x96\x69\x52\xe2\xff\x1a\x76\x5e\x35\xd8\xa0\x6c\x70\xd1\xb9\x9a\x2b\x27\x18\x75\x42\xab\x35\x2c\xce\xee\x12\x0f\x32\x8b\xa3\x07\x9f\x38\xf2\x41\x95\xba\x4c\x93\x5d\xc7\x18\xb7\xb6\xec\x24\x48\x84\x8e\x9a\x09\x65\x1d\x55\x8c\xaf\x6f\x15\xc0\xc2\x26\x39\x20\x49\x64\x73\x32\x53\x65\xe3\xc8\xae\x35\x42\xb9\x32\x4d\xfe\xfc\xfd\x0f\x78\xe2\xb3\x17\xae\x86\xe5\xc2\x2e\x9f\x78\x9f\xf9\x3f\x66\xe8\x18\x0e\xce\x20\x19\xf2\xcc\x6a\xaa\x7c\x8e\x1b\x7a\xe0\x29\x7e\x81\x50\x8e\x9b\x92\x32\xfe\xe5\x21\x8b\xa3\x4a\x03\xd6\x57\x9a\x1d\x33\x34\x50\xbc\xe6\xce\x08\x7e\x87\x52\x0e\xfa\xc1\x56\x58\x2f\x2d\x6a\x7a\xb1\xdd\x1e\x0b\x96\x10\x02\x58\x0e\xd1\xa3\x9e\xc2\xba\xa1\x50\x83\xd2\x1e\x07\x6e\x79\xaa\xca\x29\x59\x98\xee\x64\xa1\x96\x0e\x4c\x40\x31\x36\x07\x48\x61\x9d\x5d\x07\xfa\x41\x18\x54\xe6\x74\x85\x62\x52\x2f\xb9\x63\x35\x2f\xa6\xe6\x7f\xc7\xe0\x21\xc5\xa4\x95\x5a\x16\xdc\x33\x19\x8f\x04\xf2\x83\xc6\xfa\x1c\x7a\x88\x7c\xea\x5c\xdb\xb9\x4b\xbf\x2d\x87\x24\x78\x41\x7b\xba\xb7\x39\xfc\x3a\xb3\xbc\xd8\xdb\x34\x38\xcc\x66\x25\xb4\x31\x9c\x4e\x1b\x65\x40\x38\xc4\x46\x45\x0b\x14\x7f\xc1\x96\xa8\x34\xfa\xd5\x96\x5c\x51\x57\xef\x78\x4b\x0d\x75\x1a\xfd\x69\x4b\x7e\x3c\x14\xc2\x5c\x48\x99\xfa\x3d\x6f\xde\xbd\x7b\x87\x14\x0c\xed\xff\x25\x0b\x1c\xd1\x1e\xc9\x18\xda\x3f\xc3\xe7\xe8\xfd\x3f\x50\x1a\xbd\xbf\xc0\x6a\xdc\x36\x12\x7b\xa1\x91\x82\xea\xdf\xf1\x4a\x28\x85\x48\x9c\x86\xde\x08\xc7\x3d\x7e\x3b\x42\x09\x20\x80\x3c\x9b\x59\x8c\x74\x47\x0d\x38\xed\xa8\xdc\xdf\x3b\x6e\xe1\x1c\xde\x84\x39\xa6\x3b\xe5\xc2\x27\x96\x91\xe1\x0c\xf3\x63\xa8\xaa\x78\x28\x73\x5f\xd5\x3e\xf1\x86\x33\x92\x8e\xe7\x6a\xe8\x87\xec\x74\xb5\x12\xdf\xad\x11\xa2\xc4\x3c\x7d\x6e\xe4\x53\xe1\xca\x41\xa9\x19\xe1\x85\x25\xe1\xe6\x21\xee\x33\x8a\x67\xc8\x47\xda\xf0\xcc\x87\x21\x9e\xfa\x46\x2b\xc7\x95\x4b\x0d\xd9\x71\x6a\x58\x9d\xc3\x24\x4a\xd8\xe7\x74\xc7\xea\x4b\x21\x79\x3a\x59\x42\x5f\x37\x6d\x41\x1d\x2f\x66\xd8\x7e\xb3\x5a\x3d\x0f\xce\x17\xcf\x53\x8c\x68\xf4\x02\xba\x6b\xda\x7f\xaf\x9c\xb9\x7f\xc4\x87\x46\xcf\x01\xc4\xb5\xaf\x11\xce\xd4\x9a\x7c\x9c\x81\xe4\x6a\x12\x21\x5b\xbd\x7d\xf3\xff\x6f\x87\xe3\xee\x3d\xdf\x77\x95\x07\x99\xc3\xa2\x38\xec\x73\xf0\x23\x3c\x60\x66\xc9\x38\xe5\x02\x01\x7c\xea\x15\xf2\x9e\x20\x41\x81\x43\x89\x84\xff\x33\x78\x8b\xf7\xc7\x63\xab\xcc\x4b\xf6\x27\xa3\x1d\x87\xe5\xa2\x58\x4e\x5f\x00\xb3\x4a\x4d\xf2\xe0\xea\xf9\x72\xfd\x67\x7d\x71\x22\xd4\xb8\x20\xc2\xb9\xe8\xbb\xe4\xeb\xf0\xb7\xea\x65\x00\xb3\x83\xe0\xbd\x56\x9c\x3c\x46\x3b\xec\x97\x41\x0e\x7c\xe9\xb0\x20\x38\x81\xf5\xff\xb2\x24\x9f\xc8\xf4\x32\x09\x80\x42\x2b\xfe\x0a\x2d\x01\x5f\x12\x93\x5b\xf3\xd5\x3c\x1a\x65\x46\x5b\x3b\x65\x7a\x7c\x8f\x20\x43\x32\x5a\x6f\xb4\xaa\x0c\x75\x9d\xf4\x37\xbe\x85\x7b\xdd\x81\xd2\x3d\xd4\xf4\x8e\x1f\x1f\x61\xc1\xd2\x87\xf5\xef\x97\x29\xe8\x21\x2f\x3e\x01\x86\xbb\xce\xa8\xf8\x21\xfe\x2b\x00\x00\xff\xff\x63\xab\x76\x44\x76\x0a\x00\x00"),
		},
		"/backup/searchhistory.go": &vfsgen۰CompressedFileInfo{
			name:             "searchhistory.go",
			modTime:          time.Date(2020, 5, 3, 17, 23, 38, 57117218, time.UTC),
			uncompressedSize: 2853,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xdd\x6e\xdb\x36\x14\xbe\x96\x9e\xe2\x54\x80\x61\xa9\xd1\xe8\x76\x1b\x50\x20\x40\x2f\x32\x77\xd9\x3a\x64\x5b\x10\xb7\xd8\xc5\x32\x0c\x14\x75\x24\x71\xa6\x48\x81\x3c\x8a\x1a\x14\xb9\xdf\x33\xec\xf1\xf6\x24\x03\x29\xd9\xb1\x1a\x67\x29\x86\xdd\xd8\x12\x7f\xce\xf9\xbe\xef\x7c\x87\x62\xc7\xc5\x96\xd7\x08\x05\x17\xdb\xbe\x8b\x63\xd9\x76\xc6\x12\xa4\x71\x94\x54\x2d\x25\x71\x94\x18\xe7\x7f\x3b\x4e\xcd\xaa\x92\x0a\xfd\x43\x12\xc7\x51\x52\x4b\x6a\xfa\x82\x09\xd3\xae\x5c\x57\xbd\xfc\x6a\x25\x4c\x61\x79\x32\x9f\x19\x1a\xb4\x28\xdd\xb6\xb7\xb4\x72\x9d\xea\xf5\x56\x28\xd3\x97\x5b\x6d\x8a\x62\xd5\x6d\xeb\x95\x43\x7b\x23\x05\x26\x71\x16\xc7\xab\x15\x6c\x90\x5b\xd1\x7c\x2f\x1d\x19\x7b\x0b\x83\x54\x0a\xba\x5e\xa9\x00\x2f\xae\x7a\x2d\x20\x15\xf0\x7c\xdd\x96\xd9\x7c\x69\x2a\xda\x12\x9e\x07\x04\x6c\x6d\xda\x96\xeb\x32\x07\x6e\x6b\x07\xbf\xfe\xe6\xc8\x4a\x5d\x67\xf0\x31\x8e\x23\x61\x74\x25\x6b\x38\x7d\x0d\x82\xad\xc3\x73\x1c\x29\x33\x0e\x84\x57\x76\x61\xea\x38\x72\x7e\x60\x82\xc6\x7e\xc2\x61\x33\x3e\xa6\xca\xd4\xd9\x3e\x0a\x5b\x5f\xbc\x65\x97\xd6\xb4\x1d\xa5\xc9\xb5\x4e\xb2\xa3\x13\x1b\xe2\x96\xa4\xae\x27\x85\xa1\x32\x76\x82\x0e\x13\x76\xc6\xd8\xb5\x0e\xfb\xe3\x88\xf7\xd4\xe4\x80\xd6\x06\x00\x1e\x8c\xd4\xe9\x14\xf5\xfd\xd5\x45\xbe\x43\xf9\xde\xa1\xd5\xbc\xc5\xfd\xc0\x25\x77\x6e\x30\xb6\xdc\x0f\xac\x8d\xd9\x4a\xbc\x34\x96\xf2\x03\x6a\x59\x1c\xc9\x2a\xc4\x7f\xf6\x1a\xb4\x54\xf0\x31\x8e\xbc\x00\xec\x9c\x13\x57\x55\x9a\x54\xfe\xff\x14\x36\xa1\x56\xb0\xf6\xc5\x82\xb3\x9e\x1a\xd4\x24\x05\x27\x69\xf4\x29\x2c\x4e\x6e\x92\x00\x32\x8b\xa3\xbb\xa0\x1f\x7b\xab\x2b\x53\xa5\xc9\xa6\x17\x02\x9d\xab\x7a\x05\xca\x43\x07\x32\x20\xb5\x23\xae\x05\x9e\x5e\x6b\x80\x85\x4b\x72\xf0\x24\x3d\x9b\xa3\x82\x55\x2d\xb1\x4d\x67\xa5\xa6\x2a\x4d\xfe\xfe\xf3\x2f\x78\x10\x73\x90\xd4\xc0\x72\xe1\x96\x0f\xa2\xcf\xe2\xef\x15\xda\xa7\x83\x13\x48\x26\x9d\x45\xc3\x75\xd0\xb8\xe5\x5b\x4c\xfd\x1b\x48\x4d\x68\x2b\x2e\xf0\xe3\x5d\x16\x47\xb5\x01\x6f\xb7\x34\xdb\x2b\x34\x51\xbc\x42\xb2\x12\x6f\x7c\x45\xe7\x65\x0c\x95\x3d\xbb\xb8\x00\x17\x86\xd1\x01\x63\x0c\xbc\x2b\xa2\xfb\x7a\x4a\x47\x73\xdf\x8e\x05\x0f\x70\xfc\xca\x87\xc5\x39\x56\x1d\x61\x7a\x55\xea\x25\x81\x1d\xc1\xe0\x94\x13\x9a\x09\x8a\x92\x8e\xdc\xe9\xa8\xc6\x58\x27\x5f\xa8\xe3\xbe\xf5\x1a\x9f\x23\x89\x06\xcb\x63\x61\x3c\xd1\x39\xb3\xfd\xf4\x8e\xdf\x5d\xea\x25\xad\x8c\x2a\x31\xf0\xdc\x1d\x13\xec\x07\xe3\xdd\x3b\x35\x1a\xfb\xb9\xa7\xae\xa7\xf3\xb0\x2c\x87\x64\x0c\xe6\xf7\xf3\xc2\xe5\xf0\xfb\x6c\xe7\x59\xe1\xd2\x31\x60\x36\x33\xd8\xda\x22\x3f\xec\xa6\x4f\x10\x4d\x18\x7c\xdd\x4b\x6f\x91\x85\x58\x7a\x3f\xf8\xf8\xc6\xb1\x4b\x4e\xcd\x06\x3b\x6e\x39\x19\x1f\xd7\x38\xf6\xe3\xb6\x94\xf6\x4c\xa9\x34\xac\x79\xf1\xea\xd5\x2b\x4f\xc5\xf2\xe1\x3f\xb2\xc9\x21\xb1\x7c\xf0\xa4\x2c\x1f\x1e\xe1\xb5\x8f\xfe\x3f\x50\xdb\x65\x79\x82\xdd\x6e\xd9\x8e\xe0\x13\x6d\x37\x9a\xe2\x1b\xac\xa5\xd6\x1e\x11\x19\x18\xac\x24\x0c\x3c\xdc\x0e\xca\x08\x02\xd8\xa3\x0a\xfb\x4c\x37\xdc\x02\x19\xe2\xaa\xb8\x25\x74\xf0\x1a\x5e\x8c\x63\xc2\xf4\x9a\xc6\x57\xef\xae\xa0\xb4\xe5\xba\xc6\xb1\x17\x82\xf5\x57\xab\x77\xb7\x1d\x02\x77\x0e\xd1\x52\x38\x7c\x72\x28\x50\xf0\xde\x21\x0c\x08\xfe\xef\x3b\xd4\x68\xa5\x38\xec\xde\x60\x57\xd3\xdb\x10\x49\xa3\x62\x71\x14\x59\x14\x21\x03\x4b\x77\xa7\xfa\xac\x0d\xaf\xd0\xf5\x8a\x3c\xde\x63\x3d\xc2\xc2\x91\x11\x79\xf2\x5e\xfe\x0f\xad\x7a\xe8\x8b\x6a\x32\xc2\x4c\xc7\x85\x63\xe3\x47\x8f\xd1\x07\xf2\xd5\x42\x31\xe5\x7d\xfb\x26\xf3\x4d\x29\x58\xd0\x75\x6d\x34\xa1\xa6\xf4\x7e\x3e\x87\x83\x6c\xe3\x4a\x32\xbd\x68\xce\xa5\xc2\xf4\x60\x6a\x8c\xf9\x4e\xb6\x38\x83\xf8\x87\x33\xfa\x71\x8c\xc1\xa2\x0f\xa1\xfa\x4d\x9f\x09\xf2\x8a\x0f\xdf\x6a\xb2\xb7\xf7\x30\xfd\xe6\xc7\x70\xfa\xb9\x4f\x80\xce\x2c\x71\xf0\x72\x02\x0a\xf5\x2c\x45\xb6\x7a\xf9\xe2\xcb\xaf\xa7\x33\xf8\x0d\x16\x7d\x1d\xd0\xe6\xb0\x28\xb7\x45\x0e\xe1\xc9\x1f\x73\x33\x51\x8e\x07\x79\xf0\x65\x98\x51\x0d\xb5\x1f\x4d\x39\xfe\x9f\xc0\x4b\xff\x7d\xbb\x6f\xd2\x79\x93\xfc\x62\x0d\x21\x2c\x17\xe5\x72\xde\xaa\xf2\xd3\x0e\x49\xf2\x31\xe0\xe3\x6d\xf2\x79\xfd\xf8\x6f\x09\x77\x2b\xe4\x78\x5e\x87\x36\x25\x33\xc7\x71\xad\x9f\x46\x32\x3b\x91\xde\x18\x8d\xec\x3e\xed\xb6\x58\x8e\xa5\x02\x53\xf9\x2b\x85\x77\x03\x83\xd3\x2f\xb2\x24\x3f\x28\xe1\xd3\x6c\x00\x4a\xa3\xf1\x99\xdf\x09\xfe\xe2\x73\xf0\x91\x7f\x36\xcf\xc6\x85\x35\xce\x3d\x42\x79\x77\x9f\xf2\x5c\xd9\x2e\xce\xda\xe8\xda\x72\xea\x55\x38\x2d\x1c\xdc\x9a\x1e\xb4\x19\xa0\xe1\x37\x08\x1c\x94\x11\x5c\x4d\x3b\x03\x80\x70\xf1\x3a\x84\x3f\x29\x14\xa4\xb0\x48\xbd\xd5\xf1\x5d\xfc\x4f\x00\x00\x00\xff\xff\xa1\xc7\x52\x4a\x25\x0b\x00\x00"),
		},
		"/restore": &vfsgen۰DirInfo{
			name:    "restore",
			modTime: time.Date(2020, 4, 18, 4, 49, 17, 392213227, time.UTC),
		},
		"/restore/restore.go": &vfsgen۰CompressedFileInfo{
			name:             "restore.go",
			modTime:          time.Date(2020, 5, 2, 14, 29, 49, 993201438, time.UTC),
			uncompressedSize: 164,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x41\x8e\xc3\x20\x0c\x85\xe1\x75\x7c\x0a\x2b\xcb\x59\x84\x43\x64\x6e\xd0\x5e\x20\x18\x97\x20\x02\x46\xc6\xa8\xaa\xaa\xde\xbd\x4a\xb3\x7c\x7a\xff\xd7\x36\xca\x5b\x64\x54\xee\x26\xca\x00\xa9\x34\x51\xc3\x39\x26\xdb\x87\x5f\x48\x8a\x7b\xee\xac\x9c\x7a\x1e\x6a\xae\xb7\x63\xd4\x4c\x87\x8c\x90\xab\x78\xef\x5a\x8e\x8e\xa4\x3e\x52\x9c\x01\x9c\x5b\x4b\xc0\xc0\x9d\x34\x79\xee\x68\x3b\x23\x49\x29\x5b\x0d\x60\xaf\xc6\x78\xde\xdd\x74\x90\xe1\x1b\xa6\xf5\xe7\xf0\xef\xf2\xcb\x35\x61\xfa\xbf\xdf\x10\xf1\xec\x52\x8d\xf0\x81\x6f\x00\x00\x00\xff\xff\x61\xe6\x9c\xf2\xa4\x00\x00\x00"),
		},
		"/restore/restore.tmpl": &vfsgen۰FileInfo{
			name:    "restore.tmpl",
			modTime: time.Date(2020, 4, 18, 4, 49, 17, 392213227, time.UTC),
			content: []byte(""),
		},
		"/scknobb.tmpl": &vfsgen۰CompressedFileInfo{
			name:             "scknobb.tmpl",
			modTime:          time.Date(2020, 4, 29, 1, 46, 35, 677669212, time.UTC),
			uncompressedSize: 1929,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5b\x6f\x1a\x39\x14\x7e\xf7\xaf\xf8\x52\x55\x4a\x91\x02\xa3\x36\xdd\x17\xb4\x17\x25\xe4\xaa\x4d\x20\x6a\x48\x57\x2b\x40\x23\xc3\x1c\x18\x2f\x1e\x7b\xe2\x0b\x2c\x02\xfe\xfb\xca\x9e\x09\x24\xd9\x54\xed\x43\x8d\x74\x38\xbe\x7c\xdf\x39\xf6\xb9\xcc\x7a\x8d\x8c\xa6\x42\x11\xde\x9d\x94\xe5\x15\xf1\x8c\xcc\x3b\x6c\xb7\xd8\x8d\x14\xaf\x46\xfa\x4c\x32\xa4\x69\x8a\x20\x36\xd8\x44\x3d\x4c\xa3\xb2\xc1\x66\x27\xc3\xc9\x04\x69\xba\x89\x02\x9b\x04\x09\x0e\x53\x0c\x91\x20\xc5\x70\x13\xf5\x4a\x02\xeb\x75\xeb\x0b\x49\xe2\x96\xce\xb8\xa3\xed\x96\x0d\xd3\xb0\xfe\x21\x00\x81\x5f\x83\x9d\xf0\xfb\x90\x36\x22\xf9\x5e\xee\x81\x5f\xc9\x58\xa1\xd5\x76\x0b\xb6\x49\xd3\x34\x19\x06\xff\xd2\xcd\x30\x1d\x06\xe3\x41\x49\xd3\x64\x93\xb6\x76\x32\x5a\xbd\x14\xee\x8a\xdb\x3c\xa0\x5e\x5f\xf9\x9b\x83\xfd\x8e\xfb\x52\x7a\x35\x47\x47\x6a\x9f\xe1\xcf\xae\x5e\x4a\xca\x66\x84\xde\xe9\x3f\x34\x71\x38\xe5\x93\xb9\x2f\xc1\xd8\x89\x42\xe7\xe6\x1a\x42\x39\x32\x53\x3e\xa1\xa0\x69\xb8\x9c\x5e\x12\x78\x2b\xd4\x0c\x97\xfa\x80\xb1\x0b\xa1\x32\x14\xda\x84\xa3\x53\x6d\x0a\xee\x84\x56\xe0\xae\x1d\xdd\xcb\x9d\x2b\x6d\x3b\x49\x66\xc2\xe5\x7e\xdc\x9a\xe8\x22\x59\xe6\x64\x48\xd8\xb9\x37\x2e\xb1\x93\xb9\xd2\xe3\x71\xc2\xd6\x6b\x90\xca\xb0\xdd\x32\xf6\x32\xd6\x0f\x96\xcf\x28\x84\x9a\x45\xad\x62\xad\x61\x18\x5c\xde\xf4\x4e\x4f\x6e\x46\x18\x74\x7a\xb7\xb7\x27\xdd\xb3\x11\x06\xf7\x0f\xa7\xfb\xc9\x49\xa7\x7f\xdd\xeb\xa2\xd5\x6a\x8d\x30\xe8\xdd\x85\xc9\xfd\x88\xb1\x4b\xa9\xc7\x5c\xa2\x57\x06\x5f\x6d\xc5\xf9\x95\xcc\x58\x5b\xe1\x56\xed\xfa\x5d\x9b\x4d\x49\x0b\x92\xbf\x1d\xef\x9e\xf1\x9e\x9c\x8d\x6f\xa1\xbd\x2b\xbd\xc3\xe2\x09\x82\x78\x12\xca\x17\x64\xc4\x84\x4b\xb9\xc2\x20\xa3\x29\xf7\xd2\x8d\x76\x6c\x56\x48\x52\xee\x08\x68\xda\x27\x36\x48\x3d\x9b\x09\x35\x4b\x6a\xc2\x8a\x66\x10\xff\x3e\xee\x91\x8f\x5e\x50\x00\xa2\xf9\xf8\x23\xc8\x4f\x7b\x64\x08\xc9\xd1\xb3\x44\xf8\x0e\xf2\xb8\xf9\x3f\xaf\x33\x1a\xfb\x59\xb4\xbd\xf8\x11\x86\xcf\x7b\xa4\x33\x7c\x42\x15\x32\x42\x7b\xd5\x69\xa7\x71\xdf\x3f\xeb\x3d\xf4\xc1\x55\x16\x66\x52\xcf\x30\x15\x92\x6a\x86\x5f\x46\xdf\x49\x86\xf3\x7f\x79\x51\xca\x2a\x27\x3a\xba\x28\xb8\xca\xea\x10\x8e\xab\x2c\x0e\xa3\x4e\xe8\xb9\x7a\x4a\x74\x3d\x0e\x89\x6e\x19\xab\xe1\x35\xe4\xfd\x2e\x97\x6a\x30\x97\xf2\xed\x8d\x8c\xdb\x7c\xac\xb9\xc9\xde\xde\x36\x54\x6a\xe3\xde\xde\xcb\x85\x75\xda\xac\x18\xbb\xd0\xa6\x2a\x95\x9c\x64\xf9\xda\x81\xb0\x56\x23\xe2\xce\x37\x9e\xe1\xce\xe8\xa2\x74\x5d\x5a\x76\xb4\x52\x53\x31\xf3\x26\x56\x5c\x7c\x8e\xe6\xcf\x1d\xac\xab\xd1\xd1\xcf\x8c\xe0\x22\xc4\xe9\x42\x7b\x95\xb5\x71\xb8\x5e\xb7\xc2\x5c\xf1\x82\xb6\xdb\xc3\x9f\x6e\x7c\x70\x1d\x8a\x4d\x58\xac\xb4\x37\x98\x0a\x63\x1d\x8c\x57\x47\x28\xc9\xe4\xbc\xb4\x7f\xe0\xaf\xf3\x9b\x4e\xef\xf6\xfc\xe0\x00\xed\xc6\x88\xb1\xbe\xc6\x44\x2b\x15\xfa\xd9\x4a\x7b\x14\xde\x3a\x94\x46\x2f\x44\x46\x15\xc7\xc7\xc6\xcb\x2e\x26\x94\x75\x5c\x4d\x08\x0f\x5f\x6e\xf0\xa9\x01\x6f\xc9\x84\xdb\xc4\xcc\x64\xc7\x0d\x94\xdc\xda\xa5\x36\x59\x0b\xfd\x9c\x2c\x61\xc1\xa5\x27\x0b\x6e\x08\xa4\x26\x66\x55\x3a\xca\xb0\x14\x2e\xc7\xe7\x46\x6c\x0c\x71\x4d\x63\x4e\x2b\x2c\x73\x52\x08\x71\x0f\x9d\x52\x28\x16\xb6\x83\x01\x8b\xf7\x57\xba\xa0\x33\x61\x5a\x8c\x75\x7b\xfd\xf3\x36\xfe\xd6\x1e\x4b\x21\x25\x72\xbe\xa0\xaa\xc1\xc4\xce\x14\xaa\x43\x69\x07\x1b\x96\x2b\xea\xc0\x1c\xbc\x7b\xba\x97\x70\xc8\x7c\x34\x51\xd7\x5d\x69\xf4\xcc\xf0\x02\x42\x2d\xf4\xa4\x0a\x5a\x74\xf0\xb0\xd9\x9c\xd3\xea\x10\xdc\x82\xa3\xe4\x86\x17\xe4\x28\xb8\x70\x17\xbf\x45\x3b\xc2\x60\xdd\xd0\xa3\x17\x86\xb2\xfa\xbe\x6d\xb6\x4f\xc5\xff\x02\x00\x00\xff\xff\x1d\x74\x20\xeb\x89\x07\x00\x00"),
		},
		"/vfs_mock.go": &vfsgen۰CompressedFileInfo{
			name:             "vfs_mock.go",
			modTime:          time.Date(2020, 5, 2, 15, 1, 3, 893284788, time.UTC),
			uncompressedSize: 694,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\xcf\x6e\x9c\x30\x1c\x84\xcf\xeb\xa7\x98\x72\xc9\xa2\x12\xb6\xe7\x48\x39\xa5\x8d\xaa\x5e\x9b\x9e\x57\x06\x0f\x60\xc5\x7f\x90\xfd\x63\x57\xab\xaa\xef\x5e\x19\x96\xaa\xb9\xd8\xc6\x1a\x7f\x8c\x3f\x9f\x4e\xf8\xdc\x2d\xd6\x19\x7c\x4a\x74\xd4\x99\x4a\x9d\x4e\x78\x9b\x6c\xc6\xac\xfb\x77\x3d\x12\x36\x23\x06\x77\xc3\x92\x69\x60\x96\x64\xc3\x08\xc3\x0b\x5d\x9c\x3d\x83\x40\x22\x5c\xd4\x06\x32\x11\x89\x39\x2e\xa9\x67\xc6\x90\xa2\x87\xb1\xf9\xbd\x2d\xc0\x5f\xb9\x9c\x1a\x23\x46\x06\x26\x2d\xc4\xd5\x3a\x87\x3e\xb1\xac\x35\x1e\x84\x7e\x76\x5a\x78\xde\x03\xed\x18\x1f\xb6\x50\xa6\xac\xec\xb7\x7b\xe4\x35\x3a\xc3\x04\x63\x87\x81\x89\x41\xdc\x4d\xa9\xbd\x6b\xef\x8d\x52\xd6\xcf\x31\x09\x8e\xea\x50\x05\xca\x69\x12\x99\x2b\x75\xa8\x66\x2d\x53\x99\xd3\x12\xc4\x7a\x56\xaa\x5e\xef\xfa\xe2\xcd\x77\xba\xf9\x9b\xef\x68\x60\xfd\xec\x58\x6e\x95\xd7\x5f\x96\xa3\x18\xac\x63\xbe\x65\xa1\x6f\xd0\x2d\xb2\xfa\xb8\x30\x25\x6b\x0c\x03\xae\x53\x19\x58\x48\x9b\xc8\xab\x95\x09\xa2\xc7\x8c\xe3\x18\xef\x7b\x8f\xeb\xf7\xdd\x70\x0d\x29\x7a\x0b\x16\xd7\x18\x1e\x04\x1d\xd7\x9c\xac\xfc\x42\xda\x6d\xe4\xff\x75\x6c\x36\x3a\xb6\xea\xa2\xd3\xc7\xda\xa5\x67\xfb\x6a\x1d\x7f\xae\x3d\x95\x1a\x96\xd0\xc3\x06\x2b\xc7\x1a\xbf\xd5\x61\x7f\xd2\x40\x9a\x5c\x1e\xac\xe3\xa6\x35\x42\x07\xe8\x2e\x47\xb7\x08\x31\x6c\x66\x8b\xa8\x06\x39\xe2\x4a\x18\x26\x7b\x21\xac\xb4\x78\x7a\xac\xd5\xe1\xdc\xac\xc5\x83\xf6\x6c\x70\x6e\x70\xc6\xd3\x33\xee\x46\xdb\x17\xed\x1c\xd3\xf1\x4b\xad\xd4\xe1\x43\xbf\xe7\xad\xe1\x57\x9b\x8e\x05\xde\xfe\x88\x36\x6c\xab\xb2\xb5\x03\xeb\x06\x55\xdb\x56\xff\x46\x3d\xcf\x65\xea\xbd\xa9\xea\x82\x4c\x94\x25\x05\xf5\x47\xfd\x0d\x00\x00\xff\xff\x0c\xf9\x0c\x68\xb6\x02\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/backup"].(os.FileInfo),
		fs["/restore"].(os.FileInfo),
		fs["/scknobb.tmpl"].(os.FileInfo),
		fs["/vfs_mock.go"].(os.FileInfo),
	}
	fs["/backup"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/backup/backup.go"].(os.FileInfo),
		fs["/backup/backup.tmpl"].(os.FileInfo),
		fs["/backup/dashboard.go"].(os.FileInfo),
		fs["/backup/report.go"].(os.FileInfo),
		fs["/backup/searchhistory.go"].(os.FileInfo),
	}
	fs["/restore"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/restore/restore.go"].(os.FileInfo),
		fs["/restore/restore.tmpl"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
